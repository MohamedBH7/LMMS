@model IEnumerable<LMMS.Models.BookRequest>

@{
    ViewData["Title"] = "Book Requests";
}

<h1>Book Requests</h1>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Author</th>
            <th>Published Year</th>
            <th>Section</th>
            <th>State</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var request in Model)
        {
            <tr id="request-@request.Id">
                <td>@request.Title</td>
                <td>@request.Author</td>
                <td>@request.PublishedYear</td>
                <td>@request.SectionName</td>
                <td>@request.State</td>
                <td>
                    <!-- Reject Request Button -->
                    <button type="button" class="btn btn-warning" onclick="rejectRequest(@request.Id)">Reject</button>

                    <!-- Delete Request Button -->
                    <button type="button" class="btn btn-danger" onclick="deleteRequest(@request.Id)">Delete</button>
                    <button type="button" class="btn btn-success" onclick="ApprovedRequest(@request.Id)">Approved</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Toast Notifications for Feedback -->
<div class="toast-container position-fixed bottom-0 end-0 p-3" id="toast-container">
    <!-- Success Toast -->
    <div id="success-toast" class="toast align-items-center text-bg-success" role="alert" aria-live="assertive" aria-atomic="true" style="display: none;">
        <div class="d-flex">
            <div class="toast-body">
                Success!
            </div>
            <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>

    <!-- Error Toast -->
    <div id="error-toast" class="toast align-items-center text-bg-danger" role="alert" aria-live="assertive" aria-atomic="true" style="display: none;">
        <div class="d-flex">
            <div class="toast-body">
                Error occurred, please try again.
            </div>
            <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        // Function to reject a request via API
        async function rejectRequest(id) {
            const confirmReject = confirm("Are you sure you want to reject this request?");
            if (!confirmReject) return;

            try {
                const response = await fetch(`/api/bookrequests/reject/${id}`, {
                    method: 'PUT', // Changed to PUT to match your API method
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (response.ok) {
                    // On success, remove the request row from the table
                    document.getElementById(`request-${id}`).remove();
                    showToast('success-toast');
                } else {
                    showToast('error-toast');
                }
            } catch (error) {
                showToast('error-toast');
            }
        }

        // Function to delete a request via API
        async function deleteRequest(id) {
            const confirmDelete = confirm("Are you sure you want to delete this request?");
            if (!confirmDelete) return;
            debugger;

            try {
                const response = await fetch(`/api/bookrequests/delete/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (response.ok) {
                    // On success, remove the request row from the table
                    document.getElementById(`request-${id}`).remove();
                    showToast('success-toast');
                } else {
                    showToast('error-toast');
                }
            } catch (error) {
                showToast('error-toast');
            }
        }




        async function ApprovedRequest(id) {
            const confirmReject = confirm("Are you sure you want to Approved this request?");
            if (!confirmReject) return;

            try {
                const response = await fetch(`/api/bookrequests/ApprovedRequest/${id}`, {
                    method: 'PUT', // Changed to PUT to match your API method
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

               
            } catch (error) {
                showToast('error-toast');
            }
        }












        // Function to show toast notifications
        function showToast(toastId) {
            const toastElement = document.getElementById(toastId);
            const toast = new bootstrap.Toast(toastElement);
            toast.show();
        }
    </script>
}
